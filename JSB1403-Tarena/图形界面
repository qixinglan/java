1.swing是 awt扩展绘图包
	windows对swing支持的不太好，所以很少用Java来发展界面应用程序
2.学习swing不建议深究（以后几乎不用）
3.容器：JFrame是一个窗口容器    JPanel是面板容器	
4.组件：JLabel  JButton  JTextField  JTextArea  JCheckBox
5.布局管理
  （1）一种用组件的setLocation（）和size（）设置组件在父组件的相对位置和大小，父组件的布局管理器需关闭
  （2）使用布局管理器来管理组件布局
5.容器上添加的东西
	（1）add（组件）。（系统会自动调用paint方法，将其画出）
	（2）自定义图形，如图片，几何图形，文字等，在paint方法用画笔画出
	根本都是调用paint方法
	重画图形repaint方法
6.资源加载（如图片文件等）
	（1）new ImageIcon("路径").getImage();默认项目目录为根目录
	（2）[1]	获得一个类的class类型实例
		类名.class（Class=Student.class)  
		对象.getClass()（如Class=student.getClass()）
		Class.forName("类名")（如Class.forName(Student)）
		[2]	class类的一个方法（URL url=）getResource(“路径”);获得一个URL对象
		URL对象是以类所在包为默认根目录
		[3]	如为图片则new ImageIcon(url).getImage();除了图片其他配置文件也可以	
		
		
		
二.开发项目
	1.创建所有界面
		com.tarena.elts.ui.LoginFrame
		com.tarena.elts.ui.MenuFrame
		com.tarena.elts.ui.ExamFrame
		com.tarena.elts.ui.WelcomeFrame
	2.创建实体对象  创建值对象
		com.tarena.elts.entity.User 登陆用户
		com.tarena.elts.entity.Question	试题库
	3.MVC思想进行软件开发
		（1）登陆流程实现
			a.增加业务模型层com.tarena.elts.service.ExamService（登陆的逻辑处理功能）
			b.增加业务和界面之间的控制器com.tarena.elts.ui.ClientContext(添加登陆如何响应的方法即界面的响应处理）
			c.添加LoginFrame界面的登陆响应事件代码
			d.在LoginFrame界面添加控制器属性
			e.将LoginFrame里的输入框设为全局属性，并添加获得内容的方法
			f.在ClientContext里添加LoginFrame，MenuFrame，ExamFrame属性并添加set方法
			g.写clientContext里的login方法，获得界面的id和pwd，调用examService的login方法得到结果
			  如果成功，更新菜单界面，关闭登陆界面，显示菜单界面
			  如果失败，捕获异常处理，传给登陆界面的message属性
			h.登陆界面添加message属性，添加设置属性内容的方法
			j.写测试类
			 	 创建一系列对象（ExamService写匿名内部类对象）将对象注入    显示界面
			k.通过测试，我们知道，判断登陆逻辑需在ExamService的实现类
			创建com.tarena.elts.service.ExamServiceImpl
			添加EntityContext对象，并写注入方法
			重写接口的login方法
			根据ID找用户
			如果没有抛出自定义异常
			如果有，判断密码
			如果正确，创建考卷，返回用户
			如果错误，抛出自定义异常
			修改测试类TestLogin，添加Config对象，添加entityContext对象、
			注入对象，测试
			通过测试TestLogin，咱们知道，ExamSrvice接口添加一个方法
			将ExamService添加setEntityContext方法
		（2）为ClientContext添加显示软件界面功能
		（3)实现退出系统的功能	
			a.为ClientContext添加exit方法
			b.为登陆界面的cancel添加事件，调用exit方法
			c.屏蔽登陆登陆界面的关闭按钮
			d.为LoginFrame添加windowListener,重写windowClosing方法
		(实体对象有Question和User，值对象有QuestionInfo和ExamInfo，实体对象有唯一标识可以进行比较加以区分，可以持久化入库。
		值对象是一个具体的值，不需要比较，不需要持久化。同样的对象根据业务，根据逻辑，侧重点不同，叫法不同。如一个人买了
		一张4排d号魏志德的座位，我们就说4排d号这个座位是实体对象，一个人问售票员还有多少座位，这个多少座位就是值对象
		是共体（不能比较），没有指向具体的实物）
		(4)实现开始考试功能
			a.在MenuFrame界面添加ClientContext属性，添加set方法
			    给开始考试按钮添加事件（调用控制器的start方法）
			b.重构ClientContext类,添加start方法
			    调用ExamService的start方法,同时返回一个考试信息
			    关闭菜单界面
			    更新考试界面
			    显示考试界面
			c.重构ExamService类,添加start方法
			    创建考卷试题,考卷信息
			    返回考卷信息
			    重构ExamService类,添加getQuestionInfo方法（获得一个考题）
			    供第二步的更新考试界面调用
		(5)实现上一题，下一题，交卷的功能
		   a.实现下一题
		  	 来到EXamFrame给下一题按钮添加事件（需添加控制器ClientContext属性来），执行控制器的next（）方法
		   	 在控制器类添加next方法  
		   	 ExamInfo没变（考试信息不变）用重载去除该参数，重载updataView（）
		   	 获得下一道题即下一个QuestionInfo，注意到最后一题时
		   	 调用重载的ExamFrame.upDataView（）;更新考试试题
		   	 测试时需在测试类中的ExamFrame注入控制器，因为ExamFrame的控制器未赋予对象
		   	 
		   b.获取用户答案	（在next方法中实现）
			  在点击下一题时保存当前答案	，从examFrame界面的选项中获得，
			  在examFram类中定义获得答案的方法
			  该方法遍历四个多选框按钮，获得被选中的value值集合，将集合传给当前题QuestionInfo的UserAnswers
		c.实现上一题
		有一个问题，在next和prev方法里，把用户答案给了currentQuesstion，而没有经过服务器，但服务器进行分数计算是用到了的用户答案
		d.实现更新选项按钮
			在ExamFram添加updtaOption（QuestionInfo）方法
			e.实现交卷
			添加交卷按钮事件，examServe examServepl  client
			(6)实现菜单界面的分数按钮功能
			在菜单按钮添加事件，getScore方法
			在控制器添加getScore方法，
			显示分数
			重构核心层，添加getScore方法
			在examService的实现类添加idFinish的属性。默认认为考试没有结束
			在over方法结束之前，isFinish为true，结束之后为False
			在getScore返回分数之前判断是否结束，如果为false。代表没有考试，抛出运行时异常，
			重构ClientContexy的getScore方法捕获异常
			
			
			
			(7)菜单规则和退出按钮实现
			给规则添加事件，调用控制器rule方法
			获得规则（通过核心层获得规则
			显示规则
			核心层添加rule方法（获得规则返回规则
			数据管理层添加getRule方法
			
			
			给按钮添加事件，调用控制器的exit方法
					  
一.MVC架构
	1.	（1）Module业务模型：软件的核心功能抽象，封装软件的核心（逻辑部分）
		（2）View：视图：软件的界面视图，用来呈现用户数据状态，接受用户请求
		（3）Controller:控制器，耦合界面与业务模型，响应用户处理请求，
			将用户数据和请求转发给业务模型，根据业务模型处理结果，更新数据转发给视图界面，
			控制器中包含界面的控制逻辑
	2.	（4）MVC的业务模型还可以细分：业务层，和数据管理层（是提供数据的CRUD管理（C创建R寻回U更新D删除 ），只关心数据操作不涉及业务功能）
	3.	MVC请求流程
		用户请求View  → Controller → Module






























